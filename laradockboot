#!/bin/bash

file=`basename $0`
# help message
if [ $1 == "--help" ]; then
echo "$file - start a new laravel project with laradock\
usage: $file [project name]"
exit
else
projectname=$1
fi

if [ -f docker-stop-all ]; then
. docker-stop-all
fi
git clone https://github.com/laravel/laravel
if [ ! -z $projectname ]; then
read -p "Project name? [laravel] " projectname
mv laravel $projectname
else
projectname=laravel
fi
cd $projectname
cp .env.example .env
sed -i "s/APP_NAME=.*/APP_NAME=${projectname}/" .env
sed -i 's/DB_HOST=.*/DB_HOST=mysql/' .env
sed -i 's/DB_DATABASE=.*/DB_DATABASE=default/' .env
sed -i 's/DB_USERNAME=.*/DB_USERNAME=root/' .env
sed -i 's/DB_PASSWORD=.*/DB_PASSWORD=root/' .env
git submodule add https://github.com/laradock/laradock
cd laradock
cp .env.example .env
sed -i "s/COMPOSE_PROJECT_NAME=laradock/COMPOSE_PROJECT_NAME=${projectname}/" .env
sed -i 's/PHP_VERSION=.*/PHP_VERSION=8.1/' .env
docker-compose up -d nginx mysql adminer
docker exec --user=laradock -t ${projectname}_workspace_1 composer install
docker exec --user=laradock -t ${projectname}_workspace_1 php artisan key:generate
docker exec --user=laradock -t ${projectname}_workspace_1 php artisan migrate
cd ..
code .
xdg-open http://localhost 1> /dev/null 2>&1 &
